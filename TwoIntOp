.section .data
/* Prompt message */
prompt: .asciz "Please enter two signed integers: "

/* Response message */
response1: .asciz "You entered %d and %d from the keyboard, now some operations on those values!\n"
response2: .asciz "Sum of %d and %d is %d\n"
response3: .asciz "Product of %d and %d is %d\n"
response4: .asciz "Logical AND of %d and %d is %d\n"
response5: .asciz "Logical OR of %d and %d is %d\n"

/* Format pattern for scanf */
pattern: .asciz "%d %d"

/* Where scanf will store the numbers read */
value_read1: .word 0
value_read2: .word 0
result_sum: .word 0
result_product: .word 0
result_and: .word 0
result_or: .word 0

.section .text
.global main
.extern printf, scanf

main:
    push {lr}            /* save our return address */

    // use r4, r5, r6, r7 as registers holding pointers to variables
    ldr r4, =value_read1
    ldr r5, =value_read2
    ldr r6, =result_sum
    ldr r7, =result_product

    ldr r0, =prompt      /* r0 contains a pointer to the prompt message */
    bl printf            /* call printf to output our prompt */

    ldr r0, =pattern     /* r0 contains a pointer to the format string for our scan pattern */
    mov r1, r4           /* r1 contains a pointer to the variable label where the first number is stored */
    mov r2, r5           /* r2 contains a pointer to the variable label where the second number is stored */
    bl scanf             /* call scanf to read two integers */

    // Perform operations
    ldr r0, [r4]         /* Load the first integer */
    ldr r1, [r5]         /* Load the second integer */

    // Calculate sum
    add r2, r0, r1
    str r2, [r6]         /* Store the sum in result_sum */

    // Calculate product
    mul r2, r0, r1
    str r2, [r7]         /* Store the product in result_product */

    // Calculate logical AND
    and r2, r0, r1
    ldr r3, =result_and
    str r2, [r3]         /* Store the logical AND result */

    // Calculate logical OR
    orr r2, r0, r1
    ldr r3, =result_or
    str r2, [r3]         /* Store the logical OR result */

    // Display the user input and results
    ldr r0, =response1   /* r0 contains a pointer to the response message */
    mov r1, [r4]         /* r1 contains the first number */
    mov r2, [r5]         /* r2 contains the second number */
    mov r3, r0           /* r3 contains the response message pointer */
    bl printf

    ldr r0, =response2
    mov r1, [r4]
    mov r2, [r5]
    ldr r3, =result_sum
    ldr r3, [r3]
    bl printf

    ldr r0, =response3
    mov r1, [r4]
    mov r2, [r5]
    ldr r3, =result_product
    ldr r3, [r3]
    bl printf

    ldr r0, =response4
    mov r1, [r4]
    mov r2, [r5]
    ldr r3, =result_and
    ldr r3, [r3]
    bl printf

    ldr r0, =response5
    mov r1, [r4]
    mov r2, [r5]
    ldr r3, =result_or
    ldr r3, [r3]
    bl printf

    mov r0, #0            /* exit code 0 = program terminated normally */
    pop {pc}             /* exit our main function */
